**Object-Relation Mapping** - перевод "Отображение объектов в таблице " и наоборот.
**Hibernate** - ORM- библиотека, реализация этого ORM,автоматизирует отображение объектов в таблицы и наоборот.
Преимущество в том,что Hibernate берет на себя написание SQL- запросов для манипуляций с базой данных.\
Чтобы сделать запрос из Hibernate, нам необходимо создать сессию.
**Сессия**- объект для взаимодействия с Hibernate,когда мы что-то хотим получить из Hibernate,получаем сессию.\
Объект Session получаем из объекта SessionFactory(паттерн Фабрика).\
На объекте Session можно вызывать

- save
- update
- get
- ...

### Транзакция ###

**Транзакция** - единица работы с БД (Начали транзакцию ->работа с БД-> завершили транзакцию)\

Транзакции необходимы для поддержания согласованности данных в таблице\
Транзакции могут блокировать доступ к БД.Примеры :

- пока я пишу в таблицу не читай значения из нее
- пока я обновляю человека его нельзя обновлять
- пока я удаляю строки в таблице нельзя получить все строки из таблицы

Транзакции иожно применять (COMMIT) и откатывать (ROLLBACK)
Стандартной проблемой является состояние гонки. Несколько потоков изменяют один и тот же обьект одномоментно - неоходимо
синхронизировать потоки (обычно с помощбю блокировкок) ->(**Транзакции с разным уровнем изоляции**)

Для того, чтобы работать с Hibernate:
1) нужно подключить сам Hibernate и PostgreSQLDriver, так как Hibernate использует
для своей работы низкоуровневый JDBC.
2) Нужно создать конфигурационный файл **hibernate.properties** (называться должен именно так!!!)-> поместить его в папку resources в структуре maven.

В файле **hibernate.properties** необхоимо прописать 2 вещи :
- конфигурацию источника данных (конфигурацию JDBC драйвера)
# Конфигурация источника данных (DataSource)
hibernate.driver_class=org.postgresql.Driver ( JDBC драйвер)
hibernate.connection.url= jdbc:postgreSQL://localhost:5432/hibernate_demo_db (url базы данных)
hibernate.connection.username = postgres
hibernate.connection.password = postgres

- конфигурацию самого HIbernate
hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect (тип СУБД)
hibernate.show_sql = true (позволяет видеть в консоли , какой запрос SQL сгенерировал Hibernate в базу данных )
hibernate.current_session_context_classes=thread

//расписать все пройденные аннотации и двигать дальше по Hibernate!!!











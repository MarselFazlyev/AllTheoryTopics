1) Нужно подгрузить в pom файл библиотеку из Maven репозитория postgreSQL JDBC driver.
2) Для каждой СУБД своя библиотека.
2) Справа в IDEA- вкладка Database. Коннектимся к PostgreSQL в этой вкладке. При норм подключении сможем увидеть наши
   таблицы.
   это для удобства, чтобы не работать серез PG Admin.

## JDBC ##

**JDBC** - платформенно-независимый промышленный стандарт взаимодействия JAVA-приложений с различными СУБД,
реализованный в виде пакета java.sql. Другими словами -  это некий адаптер для работой с базой данных из JAVA.\

Для соединения Java-приложения  с базой данных необходим **драйвер**. Он является посредником между СУБД  и приложением.
Для каждого СУБД драйвер свой.
Для СУБД PostgreSQL нужно подгрузить в pom файл библиотеку из Maven репозитория postgreSQL JDBC driver.
Для подключения к базе данных используется интерфейс Connection.
у него используются две реализации Driver Manager и Data Source.
После получения соединения (проверка соединения методом **isClosed()**) нам нужно написать запрос в БД
Запрос в базу данных реализуется с помощью трех классов :

1) Statement
2) Prepared statement (подготовленное выражение)
3) Callable statement

**Result Set** - множество, которое хранит результат запроса в базу данных.(пример в коде)
**Properties** - такие характеристики как логин, пароль, URL лучше хранить в отдельном файле properties в папке "
ресурсы" Есть специальный класс **Properties**, который позволяет работать с данным файлом.(пример в пакете "semipro")

## Недостатки JDBC ##
- неинформативные ошибки (может случиться разное, но выбросится SQLException)
- Очень низкоуровневый способ взаимодействия с БД (Примитивность)
- Большое количество самописного кода 
- Отсутствие ORM (Object Relational Mapping )
Решением является применение более высокоуровневого взаимодействия с помощью фреймворка Spring и библиотеки Hibernate 

